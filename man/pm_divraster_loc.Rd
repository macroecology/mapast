% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{pm_divraster_loc}
\alias{pm_divraster_loc}
\title{pm_divraster_loc}
\usage{
pm_divraster_loc  (shape, occ_df, res=1, fun=mean, colland = "#66666660"
                          , colsea = "#00509010", col.grid=mycols(100), do.plot=TRUE, ...)
}
\arguments{
\item{shape}{SpatialPolygonsDataFrame object containing a map.}

\item{occ_df}{data.frame with fossil occurrences. Can be created with pm_occ(data).}

\item{res}{numeric. Defining the spatial resolution. Default res=1.}

\item{fun}{function or character. To determine what values to assign to cells that are covered by multiple spatial features. 
You can use functions such as min, max, or mean, or the character value: 'count'.}

\item{colland}{define the color of the land masses. By default colland = "#66666660".}

\item{colsea}{define the color of the sea. By default colsea = "#00509010".}

\item{col.grid}{define the color of the raster.}

\item{do.plot}{logical. Defines if a plot is created or not. By default do.plot=TRUE.}

\item{...}{Graphical parameters. Any argument that can be passed to image.plot and to
plot, such as main="my own title", main.col="red".}
}
\value{
Creates a plot with map of the time intervall, the fossil occurences and the 
RasterLayer. And returns the RasterLayer itself.
}
\description{
Calculates the Shannon diversity per unique locality (based on 
its coordinates), makes a RasterLayer and a plot showing mean, 
max, min diversity per cell, or number of unique localities per cell.
}
\examples{
\dontrun{

shape<- getmap(interval="Quaternary", model="GPlates", do.plot=FALSE)
data<- getdata (base_name="Canis", interval="Quaternary")
occ_df <- pm_occ (data, rank = "genus")
pm_divraster_loc (shape, occ_df, fun=mean)
pm_divraster_loc (shape, occ_df, fun=max)
pm_divraster_loc (shape, occ_df, fun=min)
pm_divraster_loc (shape, occ_df, fun="count")

#save as pdf file
pdf("pm_divraster_loc-GPlates_Quaternary-Canis.pdf")
pm_divraster_loc (shape, occ_df, fun=mean)
dev.off()
#save as tiff image
tiff("pm_divraster_loc-GPlates_Quaternary-Canis.tiff", 
      height = 10.5, width = 19, units = 'cm', res=300)
pm_divraster_loc (shape, occ_df, fun=mean)
dev.off()

}
}
